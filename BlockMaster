# scripts/smart_contracts.py

import requests
import pandas as pd

def fetch_smart_contract(api_url, contract_id):
    """
    Fetch smart contract data from an API.
    
    :param api_url: Base URL of the blockchain API
    :param contract_id: ID of the smart contract to fetch data for
    :return: DataFrame with smart contract data
    """
    response = requests.get(f'{api_url}/smart_contracts/{contract_id}')
    response.raise_for_status()
    data = response.json()
    df = pd.DataFrame([data])
    return df

def analyze_smart_contract(df):
    """
    Analyze smart contract data.
    
    :param df: DataFrame with smart contract data
    :return: Analysis results as DataFrame
    """
    analysis = {
        'contract_id': df['id'].iloc[0],
        'contract_name': df['name'].iloc[0],
        'creator': df['creator'].iloc[0],
        'total_calls': df['total_calls'].iloc[0],
        'total_value': df['total_value'].iloc[0]
    }
    analysis_df = pd.DataFrame([analysis])
    return analysis_df

# Example usage:
# api_url = 'https://api.blockchain.example.com'
# contract_id = 'contract_123'
# smart_contract_df = fetch_smart_contract(api_url, contract_id)
# print(smart_contract_df)
# smart_contract_analysis_df = analyze_smart_contract(smart_contract_df)
# print(smart_contract_analysis_df)
